{"version":3,"sources":["components/Footer.jsx","components/Navbar.jsx","components/Tasklist.js","pages/Welcome.js","Dashboard/index.js","App.js","style/theme.js","index.js"],"names":["Footer","Typography","variant","align","sx","position","bottom","textAlign","width","p","fontWeight","Navbar","Box","flexGrow","AppBar","Toolbar","noWrap","component","createData","name","calories","fat","carbs","protein","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","flex","Tooltip","title","IconButton","Tasklist","seenTaskList","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","console","log","emptyRows","Math","max","length","mt","Paper","mb","elevation","TableContainer","Table","minWidth","size","target","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","Welcome","handleAddTaskInList","tasklist","handleSeenTaskList","useState","isAddTaskOpen","setIsAddTaskOpen","isGeneratorOpen","setIsGeneratorOpen","task","setTask","generated","setGenerated","useEffect","handleClose","handleAddTask","setTimeout","round","random","description","createdOn","Date","toJSON","Container","maxWidth","display","pt","flexDirection","alignItems","minHeight","Dialog","open","onClose","DialogTitle","fontSize","DialogContent","TextField","margin","autoFocus","placeholder","e","autoComplete","fullWidth","DialogActions","Button","disabled","m","gutterBottom","borderRadius","Stack","md","px","py","rid","Link","to","Dashboard","setTaskList","setSeenTaskList","obj","arr","exact","path","App","createTheme","typography","fontFamily","ReactDOM","render","basename","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0eaf1a71.chunk.js","sourcesContent":["import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <Typography variant='body2' align='center' sx={{\r\n            position: 'fixed',\r\n            bottom: '0',\r\n            textAlign: 'center',\r\n            width: '100vw',\r\n            p: 2,\r\n            fontWeight: 'bold'\r\n        }} >\r\n            Crafted with ❤️\r\n        </Typography>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        noWrap\r\n                        align='center'\r\n                        fontWeight='bold'\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1}}\r\n                    >\r\n                        Task Diary\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return {\r\n        name,\r\n        calories,\r\n        fat,\r\n        carbs,\r\n        protein,\r\n    };\r\n}\r\n\r\nconst seenTaskList = [\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Donut', 452, 25.0, 51, 4.9),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n    createData('KitKat', 518, 26.0, 65, 7.0),\r\n    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n    createData('Marshmallow', 318, 0, 81, 2.0),\r\n    createData('Nougat', 360, 19.0, 9, 37.0),\r\n    createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'index',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Sr. No.',\r\n    },\r\n    {\r\n        id: 'task',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Task',\r\n    },\r\n    {\r\n        id: 'created date',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Created On',\r\n    },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <Tooltip title=\"Filter list\">\r\n                    <IconButton>\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Tasklist({ seenTaskList }) {\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    console.log(\"seenTasks in tasklist\", seenTaskList)\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = seenTaskList.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty seenTaskList.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - seenTaskList.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 2, mt: 12 }}>\r\n            <Paper sx={{ width: '100%', mb: 2, p: 2 }} elevation={3} >\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={seenTaskList.length}\r\n                        />\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 seenTaskList.slice().sort(getComparator(order, orderBy)) */}\r\n                            {stableSort(seenTaskList, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId,\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                id={labelId}\r\n                                                scope=\"row\"\r\n                                                padding=\"none\"\r\n                                            >\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: 53 * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={seenTaskList.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Container from '@mui/material/Container';\r\nimport { Button, Stack, Typography, TextField } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Tasklist from '../components/Tasklist';\r\n\r\nexport default function Welcome({ handleAddTaskInList, tasklist, handleSeenTaskList }) {\r\n    const [isAddTaskOpen, setIsAddTaskOpen] = useState(false)\r\n    const [isGeneratorOpen, setIsGeneratorOpen] = useState(false)\r\n    const [task, setTask] = useState('');\r\n    const [generated, setGenerated] = useState('');\r\n    console.log(\"tasklist\", tasklist, tasklist.length)\r\n\r\n    useEffect(() => {\r\n        console.log('i am change', generated);\r\n    }, [generated])\r\n\r\n    const handleTaskChange = (e) => {\r\n        setTask(e.target.value);\r\n    }\r\n    const handleClose = () => {\r\n        setIsAddTaskOpen(false);\r\n    };\r\n    const closeGenerator = () => {\r\n        setIsGeneratorOpen(false);\r\n    };\r\n    const handleAddTask = async () => {\r\n        setTimeout(handleAddTaskInList({\r\n            id: Math.round(Math.random() * 100000),\r\n            description: task,\r\n            createdOn: new Date().toJSON()\r\n        }), 0)\r\n        setIsAddTaskOpen(false);\r\n        setTask('');\r\n    }\r\n    const updateTask = (ids) => {\r\n        const seenTasks = tasklist.filter((task) => task.id === tasklist[ids].id);\r\n        console.log(\"seenTask\", seenTasks, ids);\r\n        handleSeenTaskList(seenTasks)\r\n    }\r\n    const generateTask = () => {\r\n        if (tasklist && tasklist.length > 0) {\r\n            let rid = Math.round(Math.random() * (tasklist.length - 1));\r\n            console.log(tasklist[rid].id);\r\n            setGenerated(tasklist[rid].description);\r\n            setIsGeneratorOpen(true);\r\n            // updateTask(rid);\r\n        }\r\n    }\r\n    return (\r\n        <Container maxWidth={false} sx={{\r\n            display: \"flex\",\r\n            pt: '20vh',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            bgcolor: ' rgba(66, 165, 246, 0.3)',\r\n            minHeight: '100vh',\r\n        }} >\r\n            <Dialog open={isAddTaskOpen} onClose={handleClose}>\r\n                <DialogTitle sx={{ textAlign: 'center', fontSize: '1.5rem', color: 'text.primary', fontWeight: 'bold' }}>Add Task</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField id=\"outlined-basic\" margin=\"dense\" autoFocus placeholder=\"Add Task Description\" value={task} onChange={handleTaskChange} variant=\"outlined\" autoComplete=\"off\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions sx={{ margin: 'auto' }}>\r\n                    <Button onClick={handleAddTask} disabled={!task} variant='contained' >Add Task</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isGeneratorOpen} onClose={handleClose}>\r\n                <DialogTitle sx={{ textAlign: 'center', fontSize: '1.5rem', color: 'text.primary', fontWeight: 'bold' }}>Generated Task</DialogTitle>\r\n                <DialogContent sx={{ m: 'auto' }} >\r\n                    <Typography variant={'p'} align='center' >\r\n                        {!!generated && generated}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions sx={{ margin: 'auto' }}>\r\n                    <Button onClick={closeGenerator} variant='contained' >Okay</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Typography variant={'h3'} align='center' fontWeight='bold' color='text.primary' gutterBottom >\r\n                Welcome to the\r\n                <Typography variant={'h4'} align='center' fontWeight='bold' bgcolor='white' borderRadius={2} p={1} color='primary' >\r\n                    Task Diary\r\n                </Typography>\r\n            </Typography>\r\n            <Stack direction='row' direction={{ xs: 'column', md: 'column', sm: 'row' }} spacing={{ xs: 1, sm: 2, md: 4 }} mt={10} >\r\n                <Button onClick={() => setIsAddTaskOpen(true)} variant=\"contained\" sx={{\r\n                    px: 4,\r\n                    py: 2,\r\n                    fontSize: 30\r\n                }}  >Add Task</Button>\r\n                <Button variant=\"contained\" sx={{\r\n                    px: 4,\r\n                    py: 2,\r\n                    fontSize: 30\r\n                }}\r\n                    onClick={generateTask}\r\n                >Fetch Task</Button>\r\n                <Button variant=\"contained\" component={Link} sx={{\r\n                    px: 4,\r\n                    py: 2,\r\n                    fontSize: 30\r\n                }}\r\n                    to='/showtask'>Show Seen Task</Button>\r\n            </Stack>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Welcome from '../pages/Welcome';\r\nimport Tasklist from '../components/Tasklist'\r\n\r\nexport default function Dashboard() {\r\n    const [tasklist, setTaskList] = useState([]);\r\n    const [seenTaskList, setSeenTaskList] = useState([]);\r\n    const handleAddTaskInList = (obj) => {\r\n        console.log(obj);\r\n        setTaskList([...tasklist, obj]);\r\n    }\r\n    const handleSeenTaskList = (arr) => {\r\n        setSeenTaskList([...seenTaskList, ...arr]);\r\n    }\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path='/' component={() => <Welcome handleAddTaskInList={handleAddTaskInList} tasklist={tasklist} handleSeenTaskList={handleSeenTaskList} />} />\r\n                <Route path='/showtask' component={() => <Tasklist seenTaskList={seenTaskList} />} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport Footer from './components/Footer'\nimport Navbar from './components/Navbar'\nimport Dashboard from './Dashboard/'\n\n\nexport default function App() {\n  return (\n    <>\n      <Navbar />\n      <Footer />\n      <Dashboard />\n    </>\n  )\n}\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n    typography: {\r\n        fontFamily: '\"Poppins\", sans-serif'\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { theme } from './style/theme'\nimport { ThemeProvider } from '@mui/material/styles';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename='/' >\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}